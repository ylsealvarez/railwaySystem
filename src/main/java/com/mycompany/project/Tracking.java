package com.mycompany.project;


import generated.grpc.railwayservice1.PositionResponse;
import generated.grpc.railwayservice1.StatusResponse;
import generated.grpc.railwayservice1.StatusResponse.TrainStatus;
import java.time.LocalTime;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author alvar
 */
public class Tracking extends javax.swing.JInternalFrame {

    Client1 Client1;
    /**
     * Creates new form Tracking
     */
    public Tracking() {
        try {
            initComponents();
            Client1 = new Client1();
            ResponseTracking.setLineWrap(true);
            ResponseTracking.setWrapStyleWord(true);
            ResponseTracking.setCaretPosition(ResponseTracking.getDocument().getLength());
        } catch (InterruptedException ex) {
            Logger.getLogger(Tracking.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TrackingLabel = new javax.swing.JLabel();
        TrainStationLabel = new javax.swing.JLabel();
        TrainIDLabel = new javax.swing.JLabel();
        TrainIDTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResponseTracking = new javax.swing.JTextArea();
        StatusButton = new javax.swing.JToggleButton();
        PositioningButton = new javax.swing.JToggleButton();
        TrainStationCheckBox = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        TrackingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TrackingLabel.setText("Railway Tracking System");

        TrainStationLabel.setText("Train Station");

        TrainIDLabel.setText("TrainID");

        ResponseTracking.setColumns(20);
        ResponseTracking.setRows(5);
        jScrollPane1.setViewportView(ResponseTracking);

        StatusButton.setText("Status Train");
        StatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusButtonActionPerformed(evt);
            }
        });

        PositioningButton.setText("Positioning");
        PositioningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PositioningButtonActionPerformed(evt);
            }
        });

        TrainStationCheckBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Connolly Station", "Heuston Station" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(TrackingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(StatusButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PositioningButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TrainStationLabel)
                                    .addComponent(TrainIDLabel))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TrainIDTextField)
                                    .addComponent(TrainStationCheckBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TrackingLabel)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TrainStationLabel)
                    .addComponent(TrainStationCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TrainIDLabel)
                    .addComponent(TrainIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusButton)
                    .addComponent(PositioningButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusButtonActionPerformed
        String value1 = TrainStationCheckBox.getSelectedItem().toString();
        int value2 = Integer.parseInt(TrainIDTextField.getText().trim());
        
        StatusResponse response = Client1.getTrainStatus(value1, value2);
        
        TrainStatus status = response.getTrainStatus();
        String statusString = status.name();
        
        ResponseTracking.setText(LocalTime.now().toString() + " " + "Train to " + value1 
                + " and TrainID " + value2 + " - " + statusString);  
    }//GEN-LAST:event_StatusButtonActionPerformed

    private void PositioningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PositioningButtonActionPerformed
        String value1 = TrainStationCheckBox.getSelectedItem().toString();
        int value2 = Integer.parseInt(TrainIDTextField.getText().trim());
        
        new Thread(() -> {
            Iterator<PositionResponse> responses = Client1.getMonitorPositioning(value1, value2);
            StringBuffer responseString = new StringBuffer();
            
            SwingUtilities.invokeLater(() -> {
                ResponseTracking.setText(""); // clean textArea
            });
            
            if (!responses.hasNext()) {
                responseString.append("There is no values to show");
            } else {
                
                while (responses.hasNext()) {
                    PositionResponse response = responses.next();
                    responseString.append(LocalTime.now().toString())
                            .append(" Train to ")
                            .append(response.getMessage())
                            .append(" and trainID ")
                            .append(value2)
                            .append(", current location ")
                            .append(response.getGpsCoordinates())
                            .append("\n");
                }
            }
            
            SwingUtilities.invokeLater(() -> {
                ResponseTracking.setText(responseString.toString());
            });
        }).start(); // start second thread
    }//GEN-LAST:event_PositioningButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton PositioningButton;
    private javax.swing.JTextArea ResponseTracking;
    private javax.swing.JToggleButton StatusButton;
    private javax.swing.JLabel TrackingLabel;
    private javax.swing.JLabel TrainIDLabel;
    private javax.swing.JTextField TrainIDTextField;
    private javax.swing.JComboBox<String> TrainStationCheckBox;
    private javax.swing.JLabel TrainStationLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

    /*public StatusResponse getTrainStatus(String trainStation, int trainID){

        ManagedChannel channel = ManagedChannelBuilder
                .forAddress("localhost", 50051)
                .usePlaintext()
                .build();
        RailwayService1Grpc.RailwayService1BlockingStub stub= RailwayService1Grpc.newBlockingStub(channel);

        StationRequest request = StationRequest.newBuilder().setTrainStation(trainStation).setTrainID(trainID).build();
        StatusResponse response = stub.TrainStatus(request);
        channel.shutdown();

        
        return response;

    }*/
